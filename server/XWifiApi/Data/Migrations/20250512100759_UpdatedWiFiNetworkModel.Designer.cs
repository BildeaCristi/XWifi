// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XWifiApi.Data;

#nullable disable

namespace XWifiApi.Data.Migrations
{
    [DbContext(typeof(XWifiDbContext))]
    [Migration("20250512100759_UpdatedWiFiNetworkModel")]
    partial class UpdatedWiFiNetworkModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XWifiApi.Models.WiFiNetwork", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Broadcast")
                        .HasColumnType("text");

                    b.Property<string>("Bssid")
                        .HasColumnType("text");

                    b.Property<string>("Capabilities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer");

                    b.Property<string>("Gateway")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<string>("Ipv6Address")
                        .HasColumnType("text");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ssid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subnet")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WiFiNetworks");
                });
#pragma warning restore 612, 618
        }
    }
}
